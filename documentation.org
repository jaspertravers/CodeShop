#+TITLE: codeshop Documentation
* Table :TOC:
- [[#structure][Structure]]
  - [[#components][Components]]
  - [[#functions-in-javascript][Functions in javascript]]
- [[#development][Development]]
  - [[#first][First]]
  - [[#later][Later]]
  - [[#notes][Notes]]
    - [[#related-info][Related Info]]

* Structure
** Components
| Files             |   |
|-------------------+---|
| main.js           |   |
| App.svelte        |   |
| Group.svelte      |   |
| CodeMirror.svelte |   |
| Sketch.svelte     |   |
| sketches.js       |   |

| Variables | reason               |
|-----------+----------------------|
| svelte    | import from 'svelte' |
|           |                      |

** Functions in javascript
#+begin_src js
args = ['a', 'b']
body = 'return a + b'
sum = new Function (...args, body)
return sum (2,3)
#+end_src

#+RESULTS:
: 5

I want to be able to write into the editor:
#+begin_src js
// get n numbers evenly distributed between (mi, ma).
// includes the end values.
function linspace (n, mi, ma) {
  let res = [];
  const s = (ma - mi) / (n-1);
  let y = mi;
  for (let i = 0; i < n; i++){
      res.push(y);
      y += s;
  }
  return res;
}
return linspace(9,0,10)
#+end_src

#+RESULTS:
| 0 | 1.25 | 2.5 | 3.75 | 5 | 6.25 | 7.5 | 8.75 | 10 |

and be able to use the damn thing.

* Development
** [#A] First
- Internal representation and passing of code
- CM highlighting, scrolling?
- CM saving
** [#C] Later
- code transformation/formatting and passing between CM \rarr S
  - Maybe I should be using =json= or =edn=
- Code sharing/global namespace
- How does repl.it solve the "halting problem"?
- p5 instance mode?
- Drag and Drop wm
** Notes
- Observable must thread their function boxes
- How does repl.it work?

#+begin_src js
/*
 * https://stackoverflow.com/a/19655815/9346730
 * @param fun the function to carry out in the web worker
 * @param mes the message to send to the web worker
 * @param com the function to do on completion
 * creates, dispatches & receives a web worker
 */
function wor(fun, mes, com) {
   var wor = new Worker(URL.createObjectURL(new Blob([
         'self.onmessage = ' + fun.toString()], {
         type: 'application/javascript'
   })));       
   wor.postMessage(mes);
   wor.onmessage = com;
}
#+end_src

*** Related Info
| Projects    | Technologies   |
|-------------+----------------|
| Observable  | eval()         |
| Ronin       | new Function() |
| Jupyter     |                |
| jsFiddle    | web workers    |
| Codepen     | localStorage   |
| pythontutor |                |
|             |                |


