#+TITLE: codeshop Documentation
* Table :TOC:
- [[#structure][Structure]]
  - [[#components][Components]]
  - [[#functions-in-javascript][Functions in javascript]]
  - [[#library-and-closure][Library and Closure]]
  - [[#inputs-sliders][Inputs (Sliders)]]
- [[#files][Files]]
  - [[#links][Links]]
  - [[#appsvelte][App.svelte]]
  - [[#pairsvelte][Pair.svelte]]
  - [[#codemirrorsvelte][CodeMirror.svelte]]
  - [[#sketchsvelte][Sketch.svelte]]
- [[#development][Development]]
- [[#related][related]]

* Structure
** Components
| Files             |   |
|-------------------+---|
| main.js           |   |
| App.svelte        |   |
| Pair.svelte       |   |
| CodeMirror.svelte |   |
| Sketch.svelte     |   |
| sketches.js       |   |

| Variables | reason               |
|-----------+----------------------|
| svelte    | import from 'svelte' |
|           |                      |


Observable must thread their function boxes
** Functions in javascript
#+begin_src js
args = ['a', 'b']
body = 'return a + b'
sum = new Function (...args, body)
#+end_src

I want to be able to write into the editor:
#+begin_src js
  // get n numbers evenly distributed between (mi, ma).
  // includes the end values.
  function linspace (n, mi, ma) {
    let res = [];
    const s = (ma - mi) / (n-1);
    let y = mi;
    for (let i = 0; i < n; i++){
        res.push(y);
        y += s;
    }
    return res;
  }
return linspace(9,20,30)
#+end_src

#+RESULTS:
| 20 | 21.25 | 22.5 | 23.75 | 25 | 26.25 | 27.5 | 28.75 | 30 |

** Library and Closure
#+begin_src js
const library = Object.keys($runtime).reduce((acc, fName)  => {
  const functionObj = (new Function(`return ${$runtime[fName]}`))();
  acc[fName] = functionObj;
  return acc;
}, {});

const closure = new Function (
  `return function(lib) {
    return ${sourceCode}
  }`
);

sketch = closure()(library);
#+end_src

running ~s1~ and ~linspace~
~library~ becomes ~{s1: f, linspace: f}~

~closure~  becomes, literally:
#+begin_src js
(function anonymous() {
  return function(lib) {
    return function linspace (n, mi, ma) {...}
  }
})
#+end_src

so finally, the "driver"
#+begin_src js
sketch = closure()(library);
#+end_src
passes ~library~ which is an object whose keys are other functions. In this way, any code may access other functions embeded in the ~lib~ object by ~lib.function()~

** Inputs (Sliders)
Parameters passed to the sketch element, instead of 
#+begin_src js
(p) => {...}
#+end_src
having
#+begin_src js
(p, [...sliders]) => {...}
#+end_src
* Files
** Links
** App.svelte
- Imports:
  - =svelte= components {=onMount=}
  - =Pair.svelte=
- Creates:
  - =sketch=
  - =name=
- Manifests:
  - Some =Pair= and passes them =sketch=

** Pair.svelte
- Description:
- Imports:
  - =svelte= components {=onMount=}
  - =Sketch.svelte=
  - =CodeMirror.svelte=
- Creates:
  - =export sketch=
    - sketch function imported from a plain js file
    - that function is wrapped in another function because p5js accepts "wrapped" sketch functions
  - =initial=
  - =function update=
- Manifests:

** CodeMirror.svelte
- Description:
  Creates a =CodeMirror= editor which dispatches its contents to =Pair= on every change.
  =codemirror= is available from a script in =public/index.html= as a sort of hack around the fact that I can't figure out how to import it here. I wanted to write the line ~import codemirror from 'codemirror';~ but that doesn't work the way I expected it to.
- Imports:
  - =svelte= components {=onMount=, =createEventDispatcher=}
- Creates:
  - =editor=
  - =code=
  - =frame=
  - =dispatch=
  - =function onMount=
- Manifests:
  - =textarea=
    ~bind:value={code}~
    ~bind:this={editor}~

** Sketch.svelte

* Development
- [x] Instead of dispatching new sketches =on change= we probably want a Play/Pause button style thing. Probably just a play button at first
- [ ] codemirror is not setup very well at all
- Internal representation and passing of code
- CM highlighting, scrolling?
- CM saving
- code transformation/formatting and passing between CM \rarr S
  - Maybe I should be using =json= ooh or =edn=
- Code sharing/global namespace CM_i \rarr P \rarr CM_2
- How does repl.it solve the "halting problem"?
- p5 instance mode?
- Drag and Drop wm
- add linspace to stdlib
- build std lib
- creat new Pair component for stdlib functions

* related
https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API
https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial
https://simon.html5.org/dump/html5-canvas-cheat-sheet.html




